{"version":3,"sources":["logo.svg","components/Writer.jsx","js/wordIncreaser.js","App.js","reportWebVitals.js","index.js"],"names":["Writer","onChange","value","TextField","className","label","multiline","event","target","testMeHarder","a","apiCalls","iterations","words","split","numIts","promises","map","element","replace","ilegalWords","has","dict","fetch","json","wordJson","meanings","partOfSpeech","definitions","definition","add","Promise","all","join","push","console","log","Set","forEach","n","App","React","useState","setValue","output","setOutput","callwordincreaser","wordIncreaser","Button","onClick","variant","index","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iRAAe,I,aCIFA,G,MAAS,SAAC,GAAoC,IAAD,IAAjCC,gBAAiC,MAAtB,aAAsB,EAAZC,EAAY,EAAZA,MAM1C,OACI,cAACC,EAAA,EAAD,CACAC,UAAU,YACVC,MAAM,oBACNC,WAAS,EACTJ,MAAOA,EACPD,SAViB,SAACM,GAClBN,EAASM,EAAMC,OAAON,Y,QCLf,SAAeO,EAA9B,kC,4CAAe,WAA4BP,GAA5B,uBAAAQ,EAAA,sDAEPC,EAAW,EACXC,EAAa,GACbC,EAAQX,EAAMY,MAAM,KACpBC,EAAS,EALF,YAOLA,EAAS,GAPJ,wBASHC,EAAWH,EAAMI,IAAN,uCAAU,WAAMC,GAAN,eAAAR,EAAA,yDACrBQ,EAAUA,EAAQC,QAAQ,WAAY,KACnCC,EAAYC,IAAIH,GAFE,yCAGVA,GAHU,YAKlBA,KAAWI,GALO,yCAMVA,EAAKJ,IANK,gCASQK,MAAM,mDAAqDL,GATnE,+BAS6EM,OAT7E,WASjBC,EATiB,OAUrBd,IAG4C,SAAzCc,EAAS,GAAGC,SAAS,GAAGC,cACc,cAAzCF,EAAS,GAAGC,SAAS,GAAGC,aAdH,wBAejBL,EAAKJ,GAAWO,EAAS,GAAGC,SAAS,GAAGE,YAAY,GAAGC,WAftC,kBAgBVJ,EAAS,GAAGC,SAAS,GAAGE,YAAY,GAAGC,YAhB7B,eAkBjBT,EAAYU,IAAIZ,GAlBC,kBAmBVA,GAnBU,iEAsBjBE,EAAYU,IAAIZ,GAtBC,kBAuBVA,GAvBU,0DAAV,uDATR,SAqCQa,QAAQC,IAAIhB,GArCpB,OAqCPH,EArCO,OAqC+BoB,KAAK,KAAKnB,MAAM,KACtDF,EAAWsB,KAAKrB,EAAMoB,KAAK,MAC3BlB,IAvCO,8BAyCXoB,QAAQC,IAAIzB,GAzCD,kBA0CJC,GA1CI,6C,sBA6Cf,IAAIU,EAAO,GAEPF,EAAc,IAAIiB,IACtB,oEAcEvB,MAAM,MAAMwB,SAAQ,SAAAC,GAAC,OAAInB,EAAYU,IAAIS,MCrB5BC,MApCf,WAAgB,IAAD,EAEWC,IAAMC,WAFjB,mBAERxC,EAFQ,KAEDyC,EAFC,OAGaF,IAAMC,SAAS,IAH5B,mBAGRE,EAHQ,KAGAC,EAHA,KAKRC,EAAiB,uCAAG,sBAAApC,EAAA,kEACzBmC,EADyB,SACTE,EAAc7C,GADL,6EAAH,qDAItB,OACE,qBAAKE,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,yDAIA,cAAC,EAAD,CACAF,MAAOA,EACPD,SAAU0C,IAEV,cAACK,EAAA,EAAD,CACAC,QAASH,EACT1C,UAAU,eACV8C,QAAQ,YAHR,uBAOA,6BACCN,EAAO3B,KAAI,SAAC2B,EAAQO,GAAT,OAAmB,6BAAgB,cAAC,EAAD,CAAoBjD,MAAO0C,GAAdO,IAApBA,cCvBjCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.42243171.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React from 'react';\r\nimport { TextField } from \"@material-ui/core\";\r\nimport './writer.css';\r\n\r\nexport const Writer = ( {onChange = () => {}, value} ) => {\r\n\r\n    const handleChange = (event) => {\r\n        onChange(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <TextField\r\n        className=\"textField\"\r\n        label=\"Put sentence here\"\r\n        multiline\r\n        value={value}\r\n        onChange={handleChange}\r\n        />\r\n    )\r\n}\r\n","\r\n\r\nexport default async function testMeHarder(value){\r\n    \r\n    var apiCalls = 0;\r\n    var iterations = [];\r\n    var words = value.split(\" \");\r\n    var numIts = 3;\r\n    \r\n    while(numIts > 0)\r\n    {\r\n        var promises = words.map(async element => {\r\n            element = element.replace(/[^a-z]/gi, '');\r\n            if(ilegalWords.has(element)){\r\n                return element;\r\n            }\r\n            if(element in dict){\r\n                return dict[element];\r\n            }\r\n            try {\r\n            var wordJson = (await (await fetch(\"https://api.dictionaryapi.dev/api/v2/entries/en/\" + element)).json());\r\n            apiCalls++;\r\n            //console.log(wordJson);\r\n            \r\n            if(wordJson[0].meanings[0].partOfSpeech === \"noun\" || \r\n            wordJson[0].meanings[0].partOfSpeech === \"adjective\") {\r\n                dict[element] = wordJson[0].meanings[0].definitions[0].definition;\r\n                return(wordJson[0].meanings[0].definitions[0].definition);\r\n            }else{\r\n                ilegalWords.add(element);\r\n                return element;\r\n            }\r\n            } catch {\r\n                ilegalWords.add(element);\r\n                return element;\r\n            }\r\n        });\r\n\r\n        //iteration\r\n        words = (await Promise.all(promises)).join(' ').split(' ');\r\n        iterations.push(words.join(\" \"));\r\n        numIts--;\r\n    }\r\n    console.log(apiCalls);\r\n    return iterations;\r\n}\r\n\r\nvar dict = {};\r\n\r\nvar ilegalWords = new Set();\r\n`to\r\nfrom \r\nit\r\nI\r\nA\r\na\r\nthat\r\nwith\r\nAn\r\nof\r\nor\r\nwhich\r\nThe\r\nthe\r\n`.split('\\n').forEach(n => ilegalWords.add(n));\r\n\r\nfunction islegal(value){\r\n    \r\n}","import logo from './logo.svg';\nimport './App.css';\nimport React from 'react'\nimport { Writer } from './components/Writer';\nimport { Button } from '@material-ui/core';\nimport wordIncreaser from './js/wordIncreaser.js'\n\nfunction App() {\n  \nconst [value, setValue] = React.useState();\nconst [output, setOutput] = React.useState([]);\n  \nconst  callwordincreaser = async() => {\n  setOutput(await wordIncreaser(value));\n}\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>\n          Essay Word Count Writer\n        </h1>\n\n        <Writer\n        value={value}\n        onChange={setValue}\n        />\n        <Button\n        onClick={callwordincreaser}\n        className=\"submitButton\"\n        variant=\"contained\"\n        > \n        Submit me \n        </Button>\n        <ol>\n        {output.map((output, index) => <li key={index}><Writer key={index} value={output}/></li>)}\n        </ol>\n\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}